{"version":3,"sources":["Components/Layout.js","containers/Container.js","assets/images/mastGify.png","assets/images/giphy.gif","Components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","props","children","Container","loader","className","data","length","searchKey","msg","style","textAlign","margin","require","config","Navbar","useState","setMsg","useEffect","console","log","process","axios","get","then","res","map","gif","src","images","preview_gif","url","alt","title","id","setGifArr","setLoader","searchValue","setSearchValue","suggestion","setSuggestion","gifArr","href","giphy","onKeyDown","e","keyCode","query","value","onChange","target","suggestionsForSearch","item","index","matchAll","type","placeholder","onClick","aria-hidden","borderRadius","width","position","zIndex","left","top","background","padding","data-text","gifData","original","setTimeout","giphy1","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b702978e.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Layout = (props) => {\r\n  return (\r\n    <div>\r\n      <main>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\"\r\n\r\nconst Container = (props) => {\r\n  // console.log(props);\r\n  return props.loader ? (\r\n    <div className=\"lds-roller\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      {props.data.length > 0 ? (\r\n        <div className=\"container\">\r\n          {props.searchKey ? (\r\n            <p>Results for \"{props.searchKey}\"</p>\r\n          ) : (\r\n            <p>{props.msg}</p>\r\n          )}\r\n\r\n          <div className=\"gifsContainer\">{props.data}</div>\r\n        </div>\r\n      ) : (\r\n        <p style={{ textAlign: \"center\", margin: \"50px\" }}>{props.msg}</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","export default __webpack_public_path__ + \"static/media/mastGify.dafc8498.png\";","export default __webpack_public_path__ + \"static/media/giphy.94ea860e.gif\";","import React, { useState, useEffect } from \"react\"\r\nimport giphy from \"../../assets/images/mastGify.png\"\r\nimport giphy1 from \"../../assets/images/giphy.gif\"\r\n// import Search from \"../Search/Search\";\r\nimport axios from \"axios\"\r\nimport Container from \"../../containers/Container\"\r\n\r\nrequire(\"dotenv\").config()\r\n\r\n// // let GiphyArr = \"\";\r\n// const Search = (props) => {};\r\n\r\nconst Navbar = (props) => {\r\n  const [msg, setMsg] = useState(\"\")\r\n  useEffect(() => {\r\n    console.log(process.env.REACT_APP_API_KEY)\r\n    // if (process.env.NODE_ENV === \"development\") {\r\n\r\n    // }\r\n    axios\r\n      .get(\r\n        `https://api.giphy.com/v1/gifs/trending?api_key=${process.env.REACT_APP_API_KEY}&limit=25&rating=g`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const gifData = res.data.data\r\n        // console.log(gifData)\r\n        let data = gifData.map((gif) => {\r\n          return (\r\n            <div key={gif.id} className=\"gifContainer\">\r\n              <img src={gif.images.preview_gif.url} alt={gif.title} />\r\n            </div>\r\n          )\r\n        })\r\n        setGifArr(data)\r\n        if (data.length > 0) {\r\n          setMsg(\"Some trending GIFs for you ;)\")\r\n        } else {\r\n          setMsg(\"\")\r\n        }\r\n        setLoader(false)\r\n        // GiphyArr = data;\r\n      })\r\n  }, [])\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n  const [loader, setLoader] = useState(false)\r\n  const [suggestion, setSuggestion] = useState([])\r\n  const [gifArr, setGifArr] = useState([])\r\n  const handleInputChange = (e) => {\r\n    setSearchValue(e.target.value)\r\n    setSuggestion([])\r\n    const query = searchValue\r\n    axios\r\n      .get(\r\n        `https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_API_KEY}&q=${query}&limit=15&offset=0&rating=g&lang=en`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const gifData = res.data.data\r\n        // console.log(gifData)\r\n        let data = gifData.map((gif) => {\r\n          return gif.title\r\n        })\r\n        // console.log(data, \"data\")\r\n        // const newRegex = new Regex()\r\n        const suggestionsForSearch = data.map((item, index) => {\r\n          // console.log(/^[a-zA-Z]+$/.test(item), item)\r\n          return searchValue.matchAll(/item/gi) && index <= 4 ? (\r\n            <p className=\"suggestion\" key={index}>\r\n              {item}\r\n            </p>\r\n          ) : null\r\n          // if (searchValue.matchAll(/item/gi) && index <= 4) {\r\n          //   console.log(\"go\")\r\n          //   return (\r\n          //     <p className=\"suggestion\" key={index}>\r\n          //       {item}\r\n          //     </p>\r\n          //   )\r\n          // }\r\n        })\r\n        // console.log(data)\r\n        setSuggestion(suggestionsForSearch)\r\n        // console.log(suggestionsForSearch, \"sugg\")\r\n      })\r\n  }\r\n  const handleEnterKey = (e) => {\r\n    if (e.keyCode === 13) {\r\n      setLoader(true)\r\n      setMsg(false)\r\n      const query = searchValue\r\n      axios\r\n        .get(\r\n          `https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_API_KEY}&q=${query}&limit=15&offset=0&rating=g&lang=en`\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data);\r\n          const gifData = res.data.data\r\n          // console.log(gifData)\r\n          let data = gifData.map((gif) => {\r\n            return (\r\n              <div key={gif.id} className=\"gifContainer\">\r\n                <img src={gif.images.preview_gif.url} alt={gif.title} />\r\n              </div>\r\n            )\r\n          })\r\n          setGifArr(data)\r\n          if (data.length === 0) {\r\n            setMsg(\"Nothing found. Please try with a different keyword\")\r\n          }\r\n          setLoader(false)\r\n          // GiphyArr = data;\r\n        })\r\n    }\r\n  }\r\n  const handleClick = (e) => {\r\n    // setSearchValue(e.target.value);\r\n    // console.log(searchValue);\r\n    setLoader(true)\r\n    setMsg(false)\r\n    const query = searchValue\r\n    axios\r\n      .get(\r\n        `https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_API_KEY}&q=${query}&limit=15&offset=0&rating=g&lang=en`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const gifData = res.data.data\r\n        // console.log(gifData)\r\n        let data = gifData.map((gif) => {\r\n          return (\r\n            <div key={gif.id} className=\"gifContainer\">\r\n              <img src={gif.images.preview_gif.url} alt={gif.title} />\r\n            </div>\r\n          )\r\n        })\r\n        setGifArr(data)\r\n        if (data.length === 0) {\r\n          setMsg(\"Nothing found , please try different keyword.\")\r\n        }\r\n        setLoader(false)\r\n        // GiphyArr = data;\r\n      })\r\n    // console.log(gifArr, \"run\");\r\n    // console.log(GiphyArr, \"giphy\");\r\n  }\r\n  // console.log(searchValue);\r\n  const getRandomGif = (e) => {\r\n    setSearchValue(\"\")\r\n    setLoader(true)\r\n    setMsg(\"Hold On!\")\r\n    const query = searchValue\r\n    axios\r\n      .get(\r\n        `https://api.giphy.com/v1/gifs/random?api_key=${process.env.REACT_APP_API_KEY}&tag=&rating=g`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        const gifData = res.data.data\r\n        // console.log(gifData)\r\n        let data = [\r\n          <div key={gifData.id} className=\"gifContainer\">\r\n            <img src={gifData.images.original.url} alt={gifData.title} />\r\n          </div>\r\n        ]\r\n\r\n        setGifArr(data)\r\n        setTimeout(() => {\r\n          if (data.length === 0) {\r\n            setMsg(\"Something went wrong\")\r\n          } else {\r\n            setMsg(\"Didn't liked it?, click magic man again!\")\r\n          }\r\n        }, 300)\r\n\r\n        setLoader(false)\r\n        // GiphyArr = data;\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"header\">\r\n        <div className=\"brand\">\r\n          <a href=\"/\">\r\n            <img src={giphy} alt=\"giphyJam\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"search\">\r\n          <input\r\n            onKeyDown={handleEnterKey}\r\n            value={searchValue}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Search all the GIFs here\"\r\n          />\r\n          <button onClick={handleClick}>\r\n            <i className=\"fa-2x fa fa-search \" aria-hidden=\"true\"></i>\r\n          </button>\r\n          {searchValue ? (\r\n            <div\r\n              className=\"suggestionContainer\"\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                width: \"45%\",\r\n                position: \"absolute\",\r\n                zIndex: 200,\r\n                /* right: 51%; */\r\n                left: \"27.5%\",\r\n                top: \"10%\",\r\n                background: \"transparent\",\r\n                margin: \"7px auto\",\r\n                padding: 0\r\n              }}\r\n            >\r\n              {suggestion}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div>About</div>\r\n      </nav>\r\n\r\n      <span data-text=\"Wanna see magic?\" className=\"tooltip\">\r\n        <img\r\n          onClick={getRandomGif}\r\n          className=\"random-gif\"\r\n          src={giphy1}\r\n          alt=\"magic\"\r\n        />\r\n      </span>\r\n      <Container\r\n        msg={msg}\r\n        loader={loader}\r\n        searchKey={searchValue}\r\n        data={gifArr}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Layout from \"./Components/Layout\";\nimport Container from \"./containers/Container\";\nimport Navbar from \"./Components/Navbar/Navbar\";\n\nconst App = (props) => {\n  return (\n    <Layout>\n      <Navbar />\n    </Layout>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { BrowserRouter } from \"react-router-dom\"\nrequire(\"dotenv\").config()\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}